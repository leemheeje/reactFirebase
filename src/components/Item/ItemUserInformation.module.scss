@charset 'utf-8';
@import '../../assets/scss/SCSSComponent.scss';

$profilelSize : 45px;
$profilelSizeStep : 15px;

@function calcProfileSize($size){
	@if $size == lg{
		@return $profilelSize + $profilelSizeStep;
	}@else if $size == sm{
		@return $profilelSize - $profilelSizeStep;
	}@else{
		@return $profilelSize;
	}
}
.itemUserInfoWrap{
	&.itemWrapInUserInfo{padding: 15px;}
	.itemUserInfoInner{
		position: relative;
		padding-left: calcProfileSize(md);
		min-height: calcProfileSize(md);
		.itemUserprofile{
			position: absolute;
			left: 0;
			top: 0;
			border-radius: 50%;
			overflow: hidden;
			background: no-repeat center center;
			background-size: cover;
			background-color: #ddd;
			width: calcProfileSize(md);
			height: calcProfileSize(md);
		}
		.itemUserTxts{
			padding: calcProfileSize(md) / 3 / 2;
			.tt{
				line-height: calcProfileSize(md)/3;
				font-size: 15px;
				color: #222;
				@include ellipsis;
			}
			.st{
				line-height: calcProfileSize(md)/3;
				font-size: 13px;
				color: #555;
				@include ellipsis;
			}
		}
	}
	&.lg{
		.itemUserInfoInner{
			padding-left: calcProfileSize(lg);
			min-height: calcProfileSize(lg);
		.itemUserprofile{
				width: calcProfileSize(lg);
				height: calcProfileSize(lg);
			}
			.itemUserTxts{
				padding: calcProfileSize(lg) / 3 / 2;
				.tt{
					line-height: calcProfileSize(lg)/3;
				}
				.st{
					line-height: calcProfileSize(lg)/3;
				}
			}
		}
	}
	&.sm{
		.itemUserInfoInner{
			padding-left: calcProfileSize(sm);
			min-height: calcProfileSize(sm);
		.itemUserprofile{
				width: calcProfileSize(sm);
				height: calcProfileSize(sm);
			}
			.itemUserTxts{
				padding: calcProfileSize(sm) / 3 / 2;
				.tt{
					line-height: calcProfileSize(sm)/3;
				}
				.st{
					line-height: calcProfileSize(sm)/3;
				}
			}
		}
	}
}